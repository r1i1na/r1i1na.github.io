<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>WeChat 通行密钥初体验</title>
      <link href="/2024/11/15/WeChat-%E9%80%9A%E8%A1%8C%E5%AF%86%E9%92%A5%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
      <url>/2024/11/15/WeChat-%E9%80%9A%E8%A1%8C%E5%AF%86%E9%92%A5%E5%88%9D%E4%BD%93%E9%AA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>就今天，微信推出了全新的版本<code>8.0.54</code>，老规矩，更新日志还是一句话：</p><blockquote><p>Bug fixes and improvements.</p></blockquote><p><img src="/img/14/1.png" alt="image" title="连对联都算不上的更新日志"></p><p><del>张**，不愧是你。</del></p><h1 id="新的通行密钥功能"><a href="#新的通行密钥功能" class="headerlink" title="新的通行密钥功能"></a>新的通行密钥功能</h1><p>这版本的<code>WeChat</code>悄悄加入了Apple设备<code>通行密钥</code>登录的功能。这意味着，登录微信只需要简单的<code>面容ID</code>或<code>触控ID</code>验证即可搞定。</p><p>但是明眼人已经看出来了，这是<code>WeChat</code>而不是微信，这意味着，你需要绑定<code>非中国大陆手机号</code>才能使用这个功能。</p><h1 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h1><p>很简单，进入<code>设置-账号与安全-通行密钥</code>设置，仅需简单的<code>面容ID</code>或<code>触控ID</code>验证即可成功添加通行密钥。<br><img src="/img/14/3.png" alt="image" title="生物认证添加"></p><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><p>退出WeChat后，登录时会自动弹出<code>面容ID</code>或<code>触控ID</code>认证界面，认证成功后即可登录。<br><img src="/img/14/4.png" alt="image" title="使用通行密钥登录"></p><h1 id="感想"><a href="#感想" class="headerlink" title="感想"></a>感想</h1><p>还是那句话，新功能要不大陆版没有，要不搞灰度测试，难道真的就不能普及使用吗？</p><p>有的功能是真的方便啊（CallKit），但是又被砍了，但是据说又要回归了？</p><p>记得上次在新设备上登小号，又是认证又是啥的，硬控我10分钟。</p><p>没话说。</p>]]></content>
      
      
      <categories>
          
          <category> 新功能初体验 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信 </tag>
            
            <tag> iOS </tag>
            
            <tag> 体验 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【里程碑】Broadcom 宣布 VMware Workstation 与 Fusion 对个人及商业用户免费</title>
      <link href="/2024/11/13/%E3%80%90%E9%87%8C%E7%A8%8B%E7%A2%91%E3%80%91Broadcom%E5%AE%A3%E5%B8%83VMware-Workstation-%E4%B8%8E-Fusion-%E5%AF%B9%E4%B8%AA%E4%BA%BA%E5%8F%8A%E5%95%86%E4%B8%9A%E7%94%A8%E6%88%B7%E5%85%8D%E8%B4%B9/"/>
      <url>/2024/11/13/%E3%80%90%E9%87%8C%E7%A8%8B%E7%A2%91%E3%80%91Broadcom%E5%AE%A3%E5%B8%83VMware-Workstation-%E4%B8%8E-Fusion-%E5%AF%B9%E4%B8%AA%E4%BA%BA%E5%8F%8A%E5%95%86%E4%B8%9A%E7%94%A8%E6%88%B7%E5%85%8D%E8%B4%B9/</url>
      
        <content type="html"><![CDATA[<p>2024 年 5 月，VMware 宣布对<code>个人用户</code>免费提供 VMware Workstation Pro 和 Fusion Pro 。而<code>2024 年 11 月 11 日</code>，博通 (Broadcom) 直接更进一步，宣布这两款软件对个人和<code>商业</code>用户直接<code>完全免费</code>。</p><p>看到这个消息我其实是震惊的，毕竟我早就开始用 VMware Workstation Pro 了，记得那时还是 VMware Workstation 9。</p><p>我只记得当时直接搜<code>vmware密钥</code>就能直接出来一大堆，而且随便一个就能用。</p><p><del>上头真的管吗（笑）</del></p><p>总的来说至少目前确实是好事，毕竟别人付费它免费，肯定更加有竞争力，也能提高知名度。</p><p>但是长期来看并不好下结论，作为<code>商业公司</code>，长期使用这种方式可能导致<code>维护与开发</code>的问题。</p><p>但是，VMware 大版本到底更新了啥？？我也不知道。</p><p><del>又不是不能用（笑）</del></p><p>对于个人来说，终于可以大大方方用<code>正版</code>了。（确信）</p><p>参考：<br><a href="https://mp.weixin.qq.com/s/EVkPmmehYrvnZhb7R-FAKg">https://mp.weixin.qq.com/s/EVkPmmehYrvnZhb7R-FAKg</a><br><a href="https://blogs.vmware.com/workstation/2024/05/vmware-workstation-pro-now-available-free-for-personal-use.html">https://blogs.vmware.com/workstation/2024/05/vmware-workstation-pro-now-available-free-for-personal-use.html</a></p>]]></content>
      
      
      <categories>
          
          <category> 大事记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> VMware </tag>
            
            <tag> 大事记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SwiftUI 学习小笔记</title>
      <link href="/2024/11/12/Swift-UI-%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/11/12/Swift-UI-%E5%AD%A6%E4%B9%A0%E5%B0%8F%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h1><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">SwiftUIView</span>: <span class="title class_ inherited__">View</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line"><span class="comment">// 程序代码区</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预览</span></span><br><span class="line">#<span class="type">Preview</span> &#123;</span><br><span class="line">    <span class="type">SwiftUIView</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><h2 id="添加文本"><a href="#添加文本" class="headerlink" title="添加文本"></a>添加文本</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Text</span>(<span class="string">&quot;Hello world!&quot;</span>)</span><br></pre></td></tr></table></figure><p>显示文本为<code>&quot;Hello world!&quot;</code></p><h2 id="以变量形式保存文本并显示"><a href="#以变量形式保存文本并显示" class="headerlink" title="以变量形式保存文本并显示"></a>以变量形式保存文本并显示</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t<span class="operator">=</span><span class="type">Text</span>(<span class="string">&quot;Man!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="设置文本属性"><a href="#设置文本属性" class="headerlink" title="设置文本属性"></a>设置文本属性</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Text</span>(<span class="string">&quot;Hello world!&quot;</span>.capitalized) <span class="comment">// 文字首字母大写 反过来是.lowercased</span></span><br><span class="line">    .font(.title) <span class="comment">// 字体大小</span></span><br><span class="line">    .fontWeight(.ultraLight) <span class="comment">// 字体粗细</span></span><br><span class="line"></span><br><span class="line">    .bold() <span class="comment">// 粗体</span></span><br><span class="line">    .underline((<span class="literal">true</span>, color: <span class="type">Color</span>.red)) <span class="comment">// 红色下划线</span></span><br><span class="line">    .italic() <span class="comment">// 斜体</span></span><br><span class="line">    .strikethrough(<span class="literal">true</span>, color: <span class="type">Color</span>.green) <span class="comment">// 绿色删除线</span></span><br><span class="line">    </span><br><span class="line">    .font(.system(size: <span class="number">24</span>, weight: semibold, design: .serif)) <span class="comment">// 字体大小，粗细和设计</span></span><br><span class="line">    .multilineTextAlignment(.center) <span class="comment">// 多行居中</span></span><br><span class="line">    .baselineOffset(<span class="number">50.0</span>) <span class="comment">// 行间距为 50.0</span></span><br><span class="line">    .kerning(<span class="number">1.0</span>) <span class="comment">// 文字间距为 1.0</span></span><br><span class="line">    .foreground(.red) <span class="comment">// 文字颜色为红色</span></span><br><span class="line">    .frame(width: <span class="number">200</span>, height: <span class="number">100</span>, alignment: .center) <span class="comment">// 文本框宽度为 200，高度 100，居中对齐</span></span><br><span class="line">    .minimumScaleFactor(<span class="number">0.1</span>) <span class="comment">// 设置文字自动缩放最小倍率</span></span><br></pre></td></tr></table></figure><h1 id="图形"><a href="#图形" class="headerlink" title="图形"></a>图形</h1><h2 id="添加图形"><a href="#添加图形" class="headerlink" title="添加图形"></a>添加图形</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Circle</span>() <span class="comment">// 圆</span></span><br><span class="line"><span class="type">Ellipse</span>() <span class="comment">// 椭圆</span></span><br><span class="line"><span class="type">Capsule</span>() <span class="comment">// 胶囊型</span></span><br><span class="line"><span class="type">Rectangle</span>() <span class="comment">// 矩形</span></span><br><span class="line"><span class="type">RoundedRectangle</span>() <span class="comment">// 圆角矩形</span></span><br></pre></td></tr></table></figure><h2 id="图形属性"><a href="#图形属性" class="headerlink" title="图形属性"></a>图形属性</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Circle</span>()</span><br><span class="line">    .foregroundColor(.pink) <span class="comment">// 填充粉色（前景色为粉色）</span></span><br><span class="line">    <span class="comment">// 空心圆</span></span><br><span class="line">    .stroke() <span class="comment">// 空心黑圆</span></span><br><span class="line">    .stroke(<span class="type">Color</span>.red, lineWidth: <span class="number">30</span>) <span class="comment">// 空心红圆，宽度为 30</span></span><br><span class="line">    .stroke(<span class="type">Color</span>.orange, style: <span class="type">StrokeStyle</span>(linewidth: <span class="number">20</span>, lineCap: .butt, dash[<span class="number">10</span>])) <span class="comment">// 虚线外框橙色空心圆，间距为 10</span></span><br><span class="line">    <span class="comment">// 设置形状与大小</span></span><br><span class="line">    .trim(from: <span class="number">0.5</span>, to: <span class="number">1.0</span>) <span class="comment">// 半圆</span></span><br><span class="line">    .frame(width: <span class="number">200</span>, height: <span class="number">100</span>) <span class="comment">// 宽度 200，高度 100</span></span><br><span class="line">    .in<span class="keyword">set</span>(by: <span class="number">40</span>) <span class="comment">// 缩小40%</span></span><br><span class="line">    <span class="comment">// 范围设置</span></span><br><span class="line">    .frame(minWidth: <span class="number">100</span>, maxHeight: <span class="number">200</span>) <span class="comment">// 最小宽度 100 最大高度 200</span></span><br><span class="line">    .frame(maxWidth: .infinity, maxHeight: <span class="number">100</span>) <span class="comment">// 最大宽度无限制 即填满</span></span><br><span class="line">    <span class="comment">// 其他</span></span><br><span class="line">    .border(<span class="type">Color</span>.black) <span class="comment">// 黑色外框</span></span><br><span class="line">    .offset(x: <span class="number">114</span>, y: <span class="number">514</span>) <span class="comment">// 位置偏移</span></span><br><span class="line"><span class="type">Capsule</span>(style: .circular) <span class="comment">// r角更大（？</span></span><br><span class="line"><span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">50</span>) <span class="comment">// r角为 50 的圆角矩形</span></span><br></pre></td></tr></table></figure><h3 id="留白间距"><a href="#留白间距" class="headerlink" title="留白间距"></a>留白间距</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Spacer</span>()</span><br></pre></td></tr></table></figure><h1 id="颜色与阴影"><a href="#颜色与阴影" class="headerlink" title="颜色与阴影"></a>颜色与阴影</h1><h2 id="填充"><a href="#填充" class="headerlink" title="填充"></a>填充</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RoundedRectangle</span>()</span><br><span class="line">    .fill(<span class="type">Color</span>(<span class="type">UIColor</span>.secongarySystemBackground)) <span class="comment">// 系统预置背景色 #2</span></span><br><span class="line">    .shadow(color: <span class="type">Color</span>.red .opacity(<span class="number">0.3</span>), radius: <span class="number">10</span>, x: <span class="number">0</span>, y: <span class="operator">-</span><span class="number">20</span>) <span class="comment">// 阴影配置</span></span><br><span class="line">    .background(<span class="type">Color</span>.yellow) <span class="comment">// 填充背景为黄色</span></span><br></pre></td></tr></table></figure><h2 id="自定义颜色"><a href="#自定义颜色" class="headerlink" title="自定义颜色"></a>自定义颜色</h2><p>1.前往<code>Assess.xcassets</code>，添加一个<code>Color Set</code>，命名为<code>CustomColor</code>，之后选择颜色。<br>2.</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">RoundedRectangle</span>()</span><br><span class="line">    .<span class="type">Color</span>(<span class="string">&quot;CustomColor&quot;</span>) <span class="comment">// 应用自定义颜色</span></span><br></pre></td></tr></table></figure><h2 id="渐变色"><a href="#渐变色" class="headerlink" title="渐变色"></a>渐变色</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Rectangle</span>()</span><br><span class="line">    .fill(<span class="type">LinearGradient</span>(gradient: <span class="type">Gradient</span>(colors: [<span class="type">Color</span>.red, <span class="type">Color</span>.blue]), startPoint: .leading, endPoint: .bottom))</span><br><span class="line">    <span class="comment">// 渐变颜色，从上到下逐渐由红变蓝</span></span><br></pre></td></tr></table></figure><h1 id="图像"><a href="#图像" class="headerlink" title="图像"></a>图像</h1><h2 id="引用图像"><a href="#引用图像" class="headerlink" title="引用图像"></a>引用图像</h2><p>将图像添加到<code>Assest</code>中，然后用<code>Image()</code>引用。</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(<span class="string">&quot;ImageName&quot;</span>) <span class="comment">// 引用名为 ImageName 的图片</span></span><br></pre></td></tr></table></figure><p>这是个<del>免费</del>自由的图片，将以原始大小显示。</p><h2 id="引用系统图标"><a href="#引用系统图标" class="headerlink" title="引用系统图标"></a>引用系统图标</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;globe&quot;</span>) <span class="comment">// 内置地球图标</span></span><br></pre></td></tr></table></figure><h2 id="图像属性"><a href="#图像属性" class="headerlink" title="图像属性"></a>图像属性</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(<span class="string">&quot;ImageName&quot;</span>)</span><br><span class="line">     .resizable() <span class="comment">// 可变大小</span></span><br><span class="line">     .scaledToFit() <span class="comment">// 适合屏幕（原始比例缩放）</span></span><br><span class="line">     .scaledToFill() <span class="comment">// 缩放以填充</span></span><br></pre></td></tr></table></figure><h1 id="垂直、水平与叠加视图"><a href="#垂直、水平与叠加视图" class="headerlink" title="垂直、水平与叠加视图"></a>垂直、水平与叠加视图</h1><h2 id="垂直视图"><a href="#垂直视图" class="headerlink" title="垂直视图"></a>垂直视图</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">VStack</span>(</span><br><span class="line">        alignment: .leading,</span><br><span class="line">        spacing: <span class="number">10</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="type">ForEach</span>(</span><br><span class="line">            <span class="number">1</span><span class="operator">...</span><span class="number">10</span>,</span><br><span class="line">            id: \.<span class="keyword">self</span></span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Item <span class="subst">\(<span class="variable">$0</span>)</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述10个item将按<code>垂直</code>方向排列，如图所示：<br><img src="/img/12/1.png" alt="image" title="VStack"></p><h2 id="水平视图"><a href="#水平视图" class="headerlink" title="水平视图"></a>水平视图</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">HStack</span>(</span><br><span class="line">        alignment: .top,</span><br><span class="line">        spacing: <span class="number">10</span></span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="type">ForEach</span>(</span><br><span class="line">            <span class="number">1</span><span class="operator">...</span><span class="number">5</span>,</span><br><span class="line">            id: \.<span class="keyword">self</span></span><br><span class="line">        ) &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Item <span class="subst">\(<span class="variable">$0</span>)</span>&quot;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述5个item将按<code>水平</code>方向排列，如图所示：<br><img src="/img/12/2.png" alt="image" title="HStack"></p><h2 id="堆叠视图"><a href="#堆叠视图" class="headerlink" title="堆叠视图"></a>堆叠视图</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> colors: [<span class="type">Color</span>] <span class="operator">=</span></span><br><span class="line">    [.red, .orange, .yellow, .green, .blue, .purple]</span><br><span class="line"><span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">ZStack</span> &#123;</span><br><span class="line">        <span class="type">ForEach</span>(<span class="number">0</span><span class="operator">..&lt;</span>colors.count) &#123;</span><br><span class="line">            <span class="type">Rectangle</span>()</span><br><span class="line">                .fill(colors[<span class="variable">$0</span>])</span><br><span class="line">                .frame(width: <span class="number">100</span>, height: <span class="number">100</span>)</span><br><span class="line">                .offset(x: <span class="type">CGFloat</span>(<span class="variable">$0</span>) <span class="operator">*</span> <span class="number">10.0</span>,</span><br><span class="line">                        y: <span class="type">CGFloat</span>(<span class="variable">$0</span>) <span class="operator">*</span> <span class="number">10.0</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子创建了6种颜色的大小为100x100的<code>正方形</code>堆叠，并偏移10点。<br><img src="/img/12/3.png" alt="image" title="eg1"></p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">    <span class="type">ZStack</span>(alignment: .bottomLeading) &#123; <span class="comment">// 左下角对齐</span></span><br><span class="line">        <span class="type">Rectangle</span>()</span><br><span class="line">            .fill(<span class="type">Color</span>.red)</span><br><span class="line">            .frame(width: <span class="number">100</span>, height: <span class="number">50</span>)</span><br><span class="line">        <span class="type">Rectangle</span>()</span><br><span class="line">            .fill(<span class="type">Color</span>.blue)</span><br><span class="line">            .frame(width:<span class="number">50</span>, height: <span class="number">100</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    .border(<span class="type">Color</span>.green, width: <span class="number">1</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例子创建了2个<code>堆叠于左下角</code>的矩形，并使用绿色<code>外框</code>。<br><img src="/img/12/4.png" alt="image" title="eg2"></p><h1 id="Stack-属性"><a href="#Stack-属性" class="headerlink" title="Stack 属性"></a>Stack 属性</h1><h2 id="VStack（仅左右对齐）"><a href="#VStack（仅左右对齐）" class="headerlink" title="VStack（仅左右对齐）"></a>VStack（仅左右对齐）</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">VStack</span> (alignment: .leading) &#123; <span class="comment">// 向左对齐</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">VStack</span> (alignment: .trailing) &#123; <span class="comment">// 向右对齐</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="HStack（仅上下对齐）"><a href="#HStack（仅上下对齐）" class="headerlink" title="HStack（仅上下对齐）"></a>HStack（仅上下对齐）</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HStack</span> (alignment: .top) &#123; <span class="comment">// 向上对齐</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">HStack</span> (alignment: .bottom) &#123; <span class="comment">// 向下对齐</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="元素对齐方式"><a href="#元素对齐方式" class="headerlink" title="元素对齐方式"></a>元素对齐方式</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;globe&quot;</span>)</span><br><span class="line">.frame(alignment: .leading) <span class="comment">// 向左对齐</span></span><br></pre></td></tr></table></figure><h2 id="视图间距"><a href="#视图间距" class="headerlink" title="视图间距"></a>视图间距</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HStack</span>(spacing: <span class="number">114</span>)&#123; <span class="comment">// 设置间距为 114</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="元素间距"><a href="#元素间距" class="headerlink" title="元素间距"></a>元素间距</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Image</span>(systemName: <span class="string">&quot;globe&quot;</span>)</span><br><span class="line">    .padding(.trailing, <span class="number">1</span>) <span class="comment">// 右间距</span></span><br><span class="line">    .padding(.leading, <span class="number">14</span>) <span class="comment">// 左间距</span></span><br><span class="line">    .padding(.top, <span class="number">5</span>) <span class="comment">// 上间距</span></span><br><span class="line">    .padding(.bottom, <span class="number">14</span>) <span class="comment">// 下间距</span></span><br><span class="line">    .padding(.horizontal, <span class="number">19</span>) <span class="comment">// 四周间距</span></span><br></pre></td></tr></table></figure><p>待续…</p>]]></content>
      
      
      <categories>
          
          <category> SwiftUI 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> SwiftUI </tag>
            
            <tag> macOS </tag>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Batch批处理循环分析</title>
      <link href="/2024/11/12/Batch%E6%89%B9%E5%A4%84%E7%90%86%E5%BE%AA%E7%8E%AF%E5%88%86%E6%9E%90/"/>
      <url>/2024/11/12/Batch%E6%89%B9%E5%A4%84%E7%90%86%E5%BE%AA%E7%8E%AF%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<p>众所周知，批处理经常要用到循环。不管是认真的还是<del>整人</del>。这里大致收集了几种批处理的循环方式以及各种附加语句。</p><h1 id="goto-循环"><a href="#goto-循环" class="headerlink" title="goto 循环"></a>goto 循环</h1><p>这种应该是最简单的语句了，如下:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:<span class="built_in">start</span></span><br><span class="line">[command]</span><br><span class="line"><span class="keyword">goto</span> <span class="built_in">start</span></span><br></pre></td></tr></table></figure><p>中间的<code>command</code>即为要循环的语句。此时这些命令将无限循环。</p><p>可以搭配延时语句<code>choice /t [time] /d y /n &gt;nul</code>实现间隔循环，例如：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:<span class="built_in">start</span></span><br><span class="line"><span class="built_in">echo</span> man!</span><br><span class="line">choice /t <span class="number">5</span> /d y /n &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">goto</span> <span class="built_in">start</span></span><br></pre></td></tr></table></figure><p>此时将每隔5秒输出一次<code>man!</code></p><h1 id="for-循环"><a href="#for-循环" class="headerlink" title="for 循环"></a>for 循环</h1><p>这个是最为强大的语句，但是相对繁琐，此处仅介绍基本用法。</p><p>由于<code>cmd窗口</code>中for之后的形式变量必须使用<code>%</code>来引用，因此其在cmd窗口中的基本形态为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> %var <span class="keyword">in</span> (<span class="built_in">set</span>) <span class="keyword">do</span> command [command-parameters]</span><br></pre></td></tr></table></figure><p>同样的，在<code>批处理文件</code>中for之后的形式变量必须使用<code>%%</code>来引用，因此其在批处理文件中的基本形态为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> <span class="variable">%%v</span>ar <span class="keyword">in</span> (<span class="built_in">set</span>) <span class="keyword">do</span> command [command-parameters]</span><br></pre></td></tr></table></figure><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>1.<code>For</code>、<code>in</code>和<code>do</code>不能分开使用。<br>2.对于var，可为26个字母的任意一个，并且<code>区分大小写</code>。<br>3.语句<code>set</code>两旁的括号<code>不可省略</code>。<br>4.无论何时，<code>不能没有</code>变量。</p></blockquote><h2 id="eg1-遍历字符："><a href="#eg1-遍历字符：" class="headerlink" title="eg1-遍历字符："></a>eg1-遍历字符：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">For</span> <span class="variable">%%i</span> <span class="keyword">in</span> (ABC) <span class="keyword">do</span> @<span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ABC</span><br><span class="line">Press any key to continue...</span><br></pre></td></tr></table></figure><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><p>首先，该语句将A赋予到变量i中，之后执行后面的@echo %%i命令，输出结果A。接着，该语句将B赋予到变量i中，之后执行后面的@echo %%i命令，输出结果B，如此循环直到(A B C)中<code>所有元素</code>被提取完毕，循环结束。</p><h2 id="eg2-遍历换行字符"><a href="#eg2-遍历换行字符" class="headerlink" title="eg2-遍历换行字符:"></a>eg2-遍历换行字符:</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">For</span> <span class="variable">%%i</span> <span class="keyword">in</span> (A B C) <span class="keyword">do</span> @<span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>输出结果为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br><span class="line">Press any key to continue...</span><br></pre></td></tr></table></figure><p>如果把空格换成逗号，等号是<code>等效</code>的。</p><h2 id="eg3-遍历数字"><a href="#eg3-遍历数字" class="headerlink" title="eg3-遍历数字:"></a>eg3-遍历数字:</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="keyword">For</span> /l <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span>, <span class="number">1</span>, <span class="number">100</span>) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line">    <span class="built_in">echo</span> man!</span><br><span class="line">)</span><br><span class="line"><span class="built_in">pause</span></span><br></pre></td></tr></table></figure><p>运行后屏幕上将会打印100个<code>man！</code>。<br>其类似<code>for (i=0; i&lt;n; i++)</code>。</p><h2 id="eg4-遍历文件："><a href="#eg4-遍历文件：" class="headerlink" title="eg4-遍历文件："></a>eg4-遍历文件：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> <span class="variable">%%F</span> <span class="keyword">in</span> (*.txt) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%F</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>将会遍历文件夹下所有后缀为<code>.txt</code>的文件。</p><h2 id="eg5-嵌套循环："><a href="#eg5-嵌套循环：" class="headerlink" title="eg5-嵌套循环："></a>eg5-嵌套循环：</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">For</span> <span class="variable">%%i</span> <span class="keyword">in</span> (<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>) <span class="keyword">do</span> (</span><br><span class="line">    <span class="keyword">For</span> <span class="variable">%%j</span> <span class="keyword">in</span> (a b c) <span class="keyword">do</span> (</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">%%i</span> <span class="variable">%%j</span></span><br><span class="line">    )</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>此处将<code>两个for循环</code>嵌套使用，输出<code>数值</code>将成对出现。</p><h2 id="eg6-遍历字符串："><a href="#eg6-遍历字符串：" class="headerlink" title="eg6-遍历字符串："></a>eg6-遍历字符串：</h2><p>可以用此循环遍历字符串，并按指定分隔符分割字符串。</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set</span> text=A,B,C</span><br><span class="line"><span class="keyword">For</span> /F &quot;tokens=<span class="number">1</span>-<span class="number">3</span> delims=,&quot; %% <span class="keyword">in</span> (&quot;<span class="variable">%text%</span>&quot;) <span class="keyword">do</span> (</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%i</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%j</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">%%k</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br><code>tokens=1-3</code> 用于指定获取前三个部分。<br><code>delims=,</code> 用于指定逗号作为分隔符。</p></blockquote><p>运行结果为：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A</span><br><span class="line">B</span><br><span class="line">C</span><br></pre></td></tr></table></figure><h1 id="do-while-循环"><a href="#do-while-循环" class="headerlink" title="do while 循环"></a>do while 循环</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>批处理中并没有此结构，只可以通过goto循环与条件判断模拟，不常用。</p></blockquote><p>eg:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">Set</span> /A counter=<span class="number">1</span></span><br><span class="line">:WhileLoop</span><br><span class="line"><span class="keyword">if</span> <span class="variable">%counter%</span> <span class="keyword">GTR</span> <span class="number">5</span> <span class="keyword">goto</span> EndLoop</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%counter%</span></span><br><span class="line"><span class="built_in">Set</span> /A counter+=<span class="number">1</span></span><br><span class="line"><span class="keyword">goto</span> WhileLoop</span><br><span class="line">:EndLoop</span><br></pre></td></tr></table></figure><p>counter的初始值为<code>1</code>，每循环一次<code>+1</code>。当<code>counter</code>的值到<code>5</code>时，将结束循环。</p><h1 id="do-until-循环"><a href="#do-until-循环" class="headerlink" title="do until 循环"></a>do until 循环</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>批处理中并没有此结构，只可以通过goto循环与条件判断模拟，不常用。<br>while与until是相反的。</p></blockquote><p>eg:</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">Set</span> /A counter=<span class="number">1</span></span><br><span class="line">:UntilLoop</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">%counter%</span></span><br><span class="line"><span class="built_in">Set</span> /A counter+=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> <span class="variable">%counter%</span> <span class="keyword">LEQ</span> <span class="number">5</span> <span class="keyword">goto</span> UntilLoop</span><br></pre></td></tr></table></figure><p>执行结果与<code>DO WHILE</code>相同。</p><h1 id="无限循环"><a href="#无限循环" class="headerlink" title="无限循环"></a>无限循环</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font color="red" size="4">危险</font><br>无限循环可能存在危险性，请不要滥用，更不要以此来整别人，严重情况可能导致<code>系统崩溃，文件丢失</code>等，后果自负！</p></blockquote><h2 id="eg1"><a href="#eg1" class="headerlink" title="eg1:"></a>eg1:</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:Loop</span><br><span class="line"><span class="built_in">echo</span> man!</span><br><span class="line">timeout /t <span class="number">1</span> &gt;<span class="built_in">nul</span></span><br><span class="line"><span class="keyword">goto</span> Loop</span><br></pre></td></tr></table></figure><p>此操作将在屏幕上持续打印<code>man!</code>，时间间隔为<code>1秒</code>。</p><h2 id="eg2"><a href="#eg2" class="headerlink" title="eg2:"></a>eg2:</h2><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">%<span class="number">0</span> |%<span class="number">0</span></span><br></pre></td></tr></table></figure><p>此操作将无限打开<code>cmd.exe</code>直到系统资源不足导致死机，可能需要重启才能恢复。</p>]]></content>
      
      
      <categories>
          
          <category> 批处理小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> Windows </tag>
            
            <tag> Batch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用iOS 18.1一周多后，我很无语</title>
      <link href="/2024/11/09/%E4%BD%BF%E7%94%A8iOS-18-1%E4%B8%80%E5%91%A8%E5%A4%9A%E5%90%8E%EF%BC%8C%E6%88%91%E5%BE%88%E6%97%A0%E8%AF%AD/"/>
      <url>/2024/11/09/%E4%BD%BF%E7%94%A8iOS-18-1%E4%B8%80%E5%91%A8%E5%A4%9A%E5%90%8E%EF%BC%8C%E6%88%91%E5%BE%88%E6%97%A0%E8%AF%AD/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>10月28日，啪一下，很快啊，iOS 18.1、iPadOS 18.1、watchOS 11.1<code>正式版</code>就出来了。</p><p>我也是<code>第一时间</code>将手上所有设备都更新了该版本。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">更(shou)新(hai)设备名单</font><br>iPhone 16 Pro<br>iPad Pro 11-inch (M4)<br>Apple Watch Series 8<br>MacBook Pro 14” (2023年11月)<br>Apple TV 4K (A15)</p></blockquote><h1 id="iOS-18-1"><a href="#iOS-18-1" class="headerlink" title="iOS 18.1"></a>iOS 18.1</h1><p>最明显的点就是设置中多了<code>Apple Intelligence</code>的选项，<del>可以装B</del>。</p><p>然而这只是噩梦的开始。</p><p>由于我的系统语言是英语(澳大利亚)，因此Apple Intelligence并没有启用，但是我还是能感受到耗电<code>明显加快</code>。</p><p><img src="/img/9/sctp9_1.png" alt="image" title="稳稳的6个小时续航"></p><p>相较于18.0.1，这个续航大约少了快<code>2个小时</code>。。。</p><p>然后就是<code>发热</code>，虽然没有这么离谱，但是还是可以感受到比18.0.1严重。（应该是调度没有那么保守了罢）</p><p>还有各种bug，比如<code>动画随机掉帧，控制中心图标消失，文件夹深浅色显示异常，iPhone镜像状态栏偏移的问题...</code>要不就是根本没解决，要不就是新的。</p><p><del>Beta版逐渐把那个硕大的网络控制模块分开就是最好的挤牙膏证明。</del></p><p>好处确实也有，控制中心自定义程度更大，通话录音…都是些小升级，甚至可有可无。</p><h1 id="iPadOS-18-1"><a href="#iPadOS-18-1" class="headerlink" title="iPadOS 18.1"></a>iPadOS 18.1</h1><p>主要还是耗电！耗电！耗电！</p><p>库克，克雷格！！！</p><p><img src="/img/9/sctp9_2.png" alt="image" title="史"></p><p>本人用iPad在学校做笔记，电量在那掉得跟<code>水</code>一样。</p><p>还有控制中心的抽象<code>个人热点图标</code>还在（我的iPad是Wi-Fi版本）：</p><p><img src="/img/9/sctp9_3.png" alt="image" title="抽象个人热点"></p><p>除了AI，没感觉iPad有很大的更新，最近Apple正在疯狂在AI上发力赶上友商，<del>毕竟说落后两年嘛</del>。</p><h1 id="watchOS-11-1"><a href="#watchOS-11-1" class="headerlink" title="watchOS 11.1"></a>watchOS 11.1</h1><p>逆天掉电。</p><p>但是过几天好了，应该是 Apple 特色了。</p><h1 id="macOS-15-1"><a href="#macOS-15-1" class="headerlink" title="macOS 15.1"></a>macOS 15.1</h1><p>还不错，或者说无感，Mac目前唯一正常使用AI的设备，国行Mac破解后可以在<code>澳大利亚英语</code>使用Apple Intelligence。</p><h1 id="tvOS-11-1"><a href="#tvOS-11-1" class="headerlink" title="tvOS 11.1"></a>tvOS 11.1</h1><p>无感(shui)。</p><h1 id="总结：iOS-和-iPadOS，菜就多练！"><a href="#总结：iOS-和-iPadOS，菜就多练！" class="headerlink" title="总结：iOS 和 iPadOS，菜就多练！"></a>总结：iOS 和 iPadOS，菜就多练！</h1>]]></content>
      
      
      <categories>
          
          <category> 系统简评 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> tvOS </tag>
            
            <tag> macOS </tag>
            
            <tag> iOS </tag>
            
            <tag> 体验 </tag>
            
            <tag> iPadOS </tag>
            
            <tag> watchOS </tag>
            
            <tag> 日常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在不支持的地区强行用AirPods Pro 2做听力测试</title>
      <link href="/2024/11/08/%E5%9C%A8%E4%B8%8D%E6%94%AF%E6%8C%81%E7%9A%84%E5%9C%B0%E5%8C%BA%E5%BC%BA%E8%A1%8C%E7%94%A8AirPods-Pro-2%E5%81%9A%E5%90%AC%E5%8A%9B%E6%B5%8B%E8%AF%95/"/>
      <url>/2024/11/08/%E5%9C%A8%E4%B8%8D%E6%94%AF%E6%8C%81%E7%9A%84%E5%9C%B0%E5%8C%BA%E5%BC%BA%E8%A1%8C%E7%94%A8AirPods-Pro-2%E5%81%9A%E5%90%AC%E5%8A%9B%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>Apple最近为<code>AirPods Pro 2</code>代带来了全新的<code>听力测试</code>、<code>听力保护</code>和<code>助听</code>功能，很明显<code>中国大陆</code>暂时是没有的。（不是你澳大利亚都没有是什么鬼啊）</p><p><a href="https://www.apple.com/cn/airpods-pro/feature-availability/">AirPods听力测试可用性 (简体中文)</a></p><h2 id="你需要"><a href="#你需要" class="headerlink" title="你需要"></a>你需要</h2><blockquote><p>一台运行iOS 18.1 (22B83) 或更高版本的设备<br>AirPods Pro 2 且固件版本为<code>7B19</code>或更高</p></blockquote><h1 id="解："><a href="#解：" class="headerlink" title="解："></a>解：</h1><p>很简单，在<code>Safari浏览器</code>中直接输入：</p><blockquote><p>x-apple-health:&#x2F;&#x2F;HearingAppPlugin.healthplugin&#x2F;HearingTest</p></blockquote><p>然后你会发现你直接就跳到了听力测试界面，戴上耳机 找个安静的环境，开始测试吧！</p><p><img src="/img/8/sctp8.PNG" alt="image" title="听力测试"></p><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>1.此方法仅为打开隐藏的听力测试界面，并不能启用设置中的听力测试选项。<br>2.此方法<code>可以</code>保存听力测试结果。<br>3.听力保护和助听功能暂时无解。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> iOS 玩机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 玩机 </tag>
            
            <tag> AirPods </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在macOS上为游戏启用MetalHUD</title>
      <link href="/2024/11/07/%E5%9C%A8macOS%E4%B8%8A%E4%B8%BA%E6%B8%B8%E6%88%8F%E5%90%AF%E7%94%A8MetalHUD/"/>
      <url>/2024/11/07/%E5%9C%A8macOS%E4%B8%8A%E4%B8%BA%E6%B8%B8%E6%88%8F%E5%90%AF%E7%94%A8MetalHUD/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>作为<del>帧率敏感型玩家</del><code>极客</code>，肯定希望在<code>游戏</code>时看到电脑的<code>实时状况</code>。</p><p>因此在 Windows 下，我们有<code>MSI Afterburner</code>这个解决方案，可以在游戏中看到实时帧率和占用情况。</p><p>macOS就不友好了：没有<code>第三方软件</code>可以做到这一点。</p><p>但是！macOS自带了可供<code>开发者</code>调试游戏的<a href="https://developer.apple.com/documentation/xcode/monitoring-your-metal-apps-graphics-performance/">MetalHUD</a>，即使是供开发者使用，我们也可以手动启用它。</p><h1 id="通解"><a href="#通解" class="headerlink" title="通解"></a>通解</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br><code>Crossover</code> 玩家请跳过此部分。<br>MetalHUD 并不适用于<code>OpenGL</code>。</p></blockquote><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p><code>关闭</code>目前你正在运行的<code>所有</code>游戏进程。</p><p>打开<code>终端</code>，直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/launchctl setenv MTL_HUD_ENABLED 1</span><br></pre></td></tr></table></figure><p>启动游戏，可以发现 MetalHUD 已经成功显示。</p><p><img src="/img/5/sctp5.png" alt="image" title="MetalHUD"></p><h2 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h2><p>打开<code>终端</code>，直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/launchctl setenv MTL_HUD_ENABLED 0</span><br></pre></td></tr></table></figure><p>下次运行游戏时将不再显示<code>MetalHUD</code>。</p><h1 id="CrossOver玩家"><a href="#CrossOver玩家" class="headerlink" title="CrossOver玩家"></a>CrossOver玩家</h1><h2 id="启用-1"><a href="#启用-1" class="headerlink" title="启用"></a>启用</h2><p>打开CrossOver主界面</p><p>在你要启用的游戏上<code>右键</code>并选择<code>Run with Options</code></p><p>在弹出窗口中<code>Environment variables</code>后面填入<code>MTL_HUD_ENABLED=1</code></p><p><img src="/img/5/sctp5_1.png" alt="image" title="启用MetalHUD"></p><p>启动游戏，可以发现 MetalHUD 已经成功显示。</p><h2 id="禁用-1"><a href="#禁用-1" class="headerlink" title="禁用"></a>禁用</h2><p>将<code>MTL_HUD_ENABLED=1</code>删除即可。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>若<code>重启</code>Mac，则需要重新操作一遍。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> macOS 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> 玩机 </tag>
            
            <tag> 游戏 </tag>
            
            <tag> CrossOver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apple TV无法通过iOS设备认证连接强制认证网络的解决方案</title>
      <link href="/2024/10/22/Apple-TV%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87iOS%E8%AE%BE%E5%A4%87%E8%AE%A4%E8%AF%81%E8%BF%9E%E6%8E%A5%E5%BC%BA%E5%88%B6%E8%AE%A4%E8%AF%81%E7%BD%91%E7%BB%9C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/10/22/Apple-TV%E6%97%A0%E6%B3%95%E9%80%9A%E8%BF%87iOS%E8%AE%BE%E5%A4%87%E8%AE%A4%E8%AF%81%E8%BF%9E%E6%8E%A5%E5%BC%BA%E5%88%B6%E8%AE%A4%E8%AF%81%E7%BD%91%E7%BB%9C%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="前置"><a href="#前置" class="headerlink" title="前置"></a>前置</h1><p>前几天把Apple TV连接到我学生公寓的电视上，由于我的公寓采用的是<code>强制门户网络</code> (Captive Newrork)，因此将会弹出登录界面，认证完成后即可使用。</p><p>早在<a href="https://support.apple.com/en-au/guide/tv/atvb00f5b993/15.0/tvos/15.0">tvOS 15.0</a>就支持了强制网络登录，因此靠近的iOS设备会弹出网络认证界面，直接从该设备登录此网络即可。</p><p>到这里，一切正常。</p><p>但是！这个登录界面始终一片空白，最后直接报错，提示无法连接，尝试多次依然无果。</p><p><img src="/img/7/sctp7_0.png" alt="image" title="又双叒叕报错"></p><h1 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h1><p>1、基于对<a href="https://zh.wikipedia.org/zh-hans/%E5%BC%BA%E5%88%B6%E9%97%A8%E6%88%B7">强制网络</a>的定义，我们不难得出，该强制门户根据<code>MAC地址</code>追踪已连接设备，并判断是否已经通过认证。因此，我们只需要保证Apple TV的<code>MAC地址</code>通过该强制门户认证即可。</p><p>2、Apple TV连接Wi-Fi使用硬件MAC地址，因此，其MAC地址并<code>不会改变</code>。</p><h1 id="解决："><a href="#解决：" class="headerlink" title="解决："></a>解决：</h1><h2 id="确认Apple-TV的MAC地址"><a href="#确认Apple-TV的MAC地址" class="headerlink" title="确认Apple TV的MAC地址"></a>确认Apple TV的MAC地址</h2><p>很简单，只需进入<code>设置-网络</code>（设置-通用-关于本机也可以）即可看到MAC地址：</p><p><img src="/img/7/sctp7_1.png" alt="image" title="查看MAC地址"></p><h2 id="通过其他设备更改MAC地址，使Apple-TV通过认证"><a href="#通过其他设备更改MAC地址，使Apple-TV通过认证" class="headerlink" title="通过其他设备更改MAC地址，使Apple TV通过认证"></a>通过其他设备更改MAC地址，使Apple TV通过认证</h2><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>此处以Mac为例。</p></blockquote><p>首先给Mac和Apple TV都<code>断开连接</code>要登录的Wi-Fi。在Mac上按住<code>Option</code>键的同时点击状态栏上的Wi-Fi图标，记下网络接口名称（一般是<code>en0</code>）。</p><p><img src="/img/7/sctp7_2.png" alt="image" title="网络接口"></p><p>打开终端，输入以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> ifconfig en0 ether [Apple TV的MAC地址]</span><br></pre></td></tr></table></figure><p>此时连接需要登录的Wi-Fi，不出意外将弹出登录界面，在按住<code>Option</code>键的同时点击状态栏上的Wi-Fi图标后，可以发现用于连接此Wi-Fi的MAC地址已经变成Apple TV的MAC地址。如果没有弹出登录界面，可以尝试重新连接或者随便打开一个网页。</p><p><img src="/img/7/sctp7_3.png" alt="image" title="登录"></p><p>登录完成后，可打开几个网页测试连通性。</p><h2 id="后续操作"><a href="#后续操作" class="headerlink" title="后续操作"></a>后续操作</h2><p>重启你的<code>Mac</code>，之前修改MAC地址将会被完全清除。</p><p>将Apple TV连接到此Wi-Fi，此时会发现状态栏的感叹号已经消失，可以正常访问网络了。</p><p><img src="/img/7/sctp7_4.png" alt="image" title="正常连接网络"></p>]]></content>
      
      
      <categories>
          
          <category> Apple TV 解决方案 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Apple TV </tag>
            
            <tag> 技术领域 </tag>
            
            <tag> tvOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SwiftUI的一种简易设计</title>
      <link href="/2024/10/06/SwiftUI%E7%9A%84%E4%B8%80%E7%A7%8D%E7%AE%80%E6%98%93%E8%AE%BE%E8%AE%A1/"/>
      <url>/2024/10/06/SwiftUI%E7%9A%84%E4%B8%80%E7%A7%8D%E7%AE%80%E6%98%93%E8%AE%BE%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<p>一个简洁的<code>SwiftUI</code>主页设计。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>参阅<a href="https://developer.apple.com/documentation/swiftui/building-layouts-with-stack-views">Apple Developer</a>网站来了解各种视图。</p></blockquote><h3 id="引入SwiftUI和嵌套视图ZStack。"><a href="#引入SwiftUI和嵌套视图ZStack。" class="headerlink" title="引入SwiftUI和嵌套视图ZStack。"></a>引入<code>SwiftUI</code>和嵌套视图<code>ZStack</code>。</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">LocationView</span>: <span class="title class_ inherited__">View</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span> &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;       </span><br></pre></td></tr></table></figure><h3 id="引入垂直视图VStack，创建logo与标题。"><a href="#引入垂直视图VStack，创建logo与标题。" class="headerlink" title="引入垂直视图VStack，创建logo与标题。"></a>引入垂直视图<code>VStack</code>，创建logo与标题。</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">VStack</span>&#123;</span><br><span class="line">   <span class="type">Text</span>(<span class="string">&quot;I&quot;</span>)</span><br><span class="line">       .font(.system(size: <span class="number">80</span>))</span><br><span class="line">   <span class="type">Text</span>(<span class="string">&quot;Your text here&quot;</span>)</span><br><span class="line">       .foregroundColor(.primary)</span><br><span class="line">       .font(.largeTitle)</span><br><span class="line">&#125;   </span><br></pre></td></tr></table></figure><h3 id="引入水平视图HStack-创建第一块圆角矩形并引入数据。"><a href="#引入水平视图HStack-创建第一块圆角矩形并引入数据。" class="headerlink" title="引入水平视图HStack,创建第一块圆角矩形并引入数据。"></a>引入水平视图<code>HStack</code>,创建第一块圆角矩形并引入数据。</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">HStack</span>&#123;</span><br><span class="line">    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">Spacer</span>()</span><br><span class="line">    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">Spacer</span>()</span><br><span class="line">    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;24岁&quot;</span>)</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;年龄&quot;</span>.uppercased())</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.padding()</span><br><span class="line">.foregroundStyle(<span class="type">LinearGradient</span>(colors: [.blue, .indigo], startPoint: .top, endPoint: .bottom))</span><br><span class="line">.background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">12</span>, style: .continuous))</span><br></pre></td></tr></table></figure><h3 id="创建第二块圆角矩形并引入数据"><a href="#创建第二块圆角矩形并引入数据" class="headerlink" title="创建第二块圆角矩形并引入数据"></a>创建第二块圆角矩形并引入数据</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">VStack</span>(alignment: .leading, spacing: <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="type">Text</span>(<span class="string">&quot;Your text here.&quot;</span>.uppercased())</span><br><span class="line">        .font(.headline)</span><br><span class="line">        .foregroundColor(.primary)</span><br><span class="line">    <span class="type">HStack</span>(alignment: .top, content: &#123;</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Your text here.&quot;</span>)</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.caption)</span><br><span class="line">            .multilineTextAlignment(.leading)</span><br><span class="line">            .frame(width: <span class="number">300</span>, height: <span class="number">32</span>)</span><br><span class="line">        <span class="type">Spacer</span>()</span><br><span class="line">        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">            .foregroundColor(.primary)</span><br><span class="line">            .font(.system(size: <span class="number">12</span>, weight: .bold))</span><br><span class="line">    &#125;)</span><br><span class="line">    .padding(.vertical)</span><br><span class="line">    <span class="type">HStack</span> &#123;</span><br><span class="line">        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                .foregroundColor(.primary)</span><br><span class="line">                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                .foregroundColor(.primary)</span><br><span class="line">                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="type">Spacer</span>()</span><br><span class="line">        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">                .foregroundColor(.green)</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                .foregroundColor(.primary)</span><br><span class="line">                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="type">Spacer</span>()</span><br><span class="line">        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                .foregroundColor(.primary)</span><br><span class="line">                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                .foregroundColor(.primary)</span><br><span class="line">                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">.padding()</span><br><span class="line">.foregroundColor(<span class="type">Color</span>.black.opacity(<span class="number">0.8</span>))</span><br><span class="line">.background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">20</span>, style: .continuous))</span><br></pre></td></tr></table></figure><h2 id="底部小字"><a href="#底部小字" class="headerlink" title="底部小字"></a>底部小字</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Text</span>(<span class="string">&quot;Your text here&quot;</span>)</span><br><span class="line">    .foregroundColor(.primary)</span><br><span class="line">    .padding()</span><br><span class="line">    .foregroundStyle(.black)</span><br><span class="line">    .background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">12</span>, style: .continuous))</span><br></pre></td></tr></table></figure><h2 id="底部按钮"><a href="#底部按钮" class="headerlink" title="底部按钮"></a>底部按钮</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Button</span>(<span class="string">&quot;Button&quot;</span>)&#123;</span><br><span class="line">&#125;</span><br><span class="line">.frame(width:<span class="number">100.0</span>,height:<span class="number">50.0</span>)</span><br><span class="line">.background(.tint)</span><br><span class="line">.foregroundColor(.white)</span><br><span class="line">.cornerRadius(<span class="number">30.0</span>)</span><br><span class="line">.padding()</span><br></pre></td></tr></table></figure><p>完成后再添加Preview，运行后即可看到效果。</p><p><img src="/img/6/sctp6.png" alt="image" title="运行情况"></p><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> SwiftUI</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">LocationView</span>: <span class="title class_ inherited__">View</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> body: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">        <span class="type">ZStack</span> &#123;</span><br><span class="line">            <span class="type">VStack</span> &#123;</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;I&quot;</span>)</span><br><span class="line">                    .font(.system(size: <span class="number">80</span>))</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                    .foregroundColor(.primary)</span><br><span class="line">                    .font(.largeTitle)</span><br><span class="line">                <span class="type">HStack</span>&#123;</span><br><span class="line">                    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">Spacer</span>()</span><br><span class="line">                    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="type">Spacer</span>()</span><br><span class="line">                    <span class="type">VStack</span>(alignment: .center) &#123;</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">18</span>, weight: .bold, design: .rounded))</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                .padding()</span><br><span class="line">                .foregroundStyle(<span class="type">LinearGradient</span>(colors: [.blue, .indigo], startPoint: .top, endPoint: .bottom))</span><br><span class="line">                .background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">12</span>, style: .continuous))</span><br><span class="line">                <span class="type">VStack</span>(alignment: .leading, spacing: <span class="number">2</span>) &#123;</span><br><span class="line">                    <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                        .font(.headline)</span><br><span class="line">                        .foregroundColor(.primary)</span><br><span class="line">                    <span class="type">HStack</span>(alignment: .top, content: &#123;</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Your text here.&quot;</span>)</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.caption)</span><br><span class="line">                            .multilineTextAlignment(.leading)</span><br><span class="line">                            .frame(width: <span class="number">300</span>, height: <span class="number">32</span>)</span><br><span class="line">                        <span class="type">Spacer</span>()</span><br><span class="line">                        <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                            .foregroundColor(.primary)</span><br><span class="line">                            .font(.system(size: <span class="number">12</span>, weight: .bold))</span><br><span class="line">                    &#125;)</span><br><span class="line">                    .padding(.vertical)</span><br><span class="line">                    <span class="type">HStack</span> &#123;</span><br><span class="line">                        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                                .foregroundColor(.primary)</span><br><span class="line">                                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                                .foregroundColor(.primary)</span><br><span class="line">                                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                        &#125;)</span><br><span class="line">                        <span class="type">Spacer</span>()</span><br><span class="line">                        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">                                .foregroundColor(.green)</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                                .foregroundColor(.primary)</span><br><span class="line">                                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                        &#125;)</span><br><span class="line">                        <span class="type">Spacer</span>()</span><br><span class="line">                        <span class="type">VStack</span>(alignment: .center, content: &#123;</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>)</span><br><span class="line">                                .foregroundColor(.primary)</span><br><span class="line">                                .font(.system(size: <span class="number">24</span>, weight: .bold, design: .rounded))</span><br><span class="line">                            <span class="type">Text</span>(<span class="string">&quot;Text&quot;</span>.uppercased())</span><br><span class="line">                                .foregroundColor(.primary)</span><br><span class="line">                                .font(.system(size: <span class="number">12</span>, weight: .regular, design: .rounded))</span><br><span class="line">                        &#125;)</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                .padding()</span><br><span class="line">                .foregroundColor(<span class="type">Color</span>.black.opacity(<span class="number">0.8</span>))</span><br><span class="line">                .background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">20</span>, style: .continuous))</span><br><span class="line">                <span class="type">Text</span>(<span class="string">&quot;Your text here.&quot;</span>)</span><br><span class="line">                    .foregroundColor(.primary)</span><br><span class="line">                    .padding()</span><br><span class="line">                    .foregroundStyle(.black)</span><br><span class="line">                    .background(.ultraThinMaterial, in: <span class="type">RoundedRectangle</span>(cornerRadius: <span class="number">12</span>, style: .continuous))</span><br><span class="line">                <span class="type">Button</span>(<span class="string">&quot;Button&quot;</span>)&#123;</span><br><span class="line">                &#125;</span><br><span class="line">                .frame(width:<span class="number">100.0</span>,height:<span class="number">50.0</span>)</span><br><span class="line">                .background(.tint)</span><br><span class="line">                .foregroundColor(.white)</span><br><span class="line">                .cornerRadius(<span class="number">30.0</span>)</span><br><span class="line">                .padding()</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">struct</span> <span class="title class_">LocationView_Previews</span>: <span class="title class_ inherited__">PreviewProvider</span> &#123;</span><br><span class="line">        <span class="keyword">static</span> <span class="keyword">var</span> previews: <span class="keyword">some</span> <span class="type">View</span> &#123;</span><br><span class="line">            <span class="type">LocationView</span>()</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> SwiftUI设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> SwiftUI </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows on ARM安装adb与Fastboot驱动解决安卓刷机折腾问题</title>
      <link href="/2024/07/21/Windows-on-ARM%E5%AE%89%E8%A3%85adb%E4%B8%8EFastboot%E9%A9%B1%E5%8A%A8%E8%A7%A3%E5%86%B3%E5%AE%89%E5%8D%93%E5%88%B7%E6%9C%BA%E6%8A%98%E8%85%BE%E9%97%AE%E9%A2%98/"/>
      <url>/2024/07/21/Windows-on-ARM%E5%AE%89%E8%A3%85adb%E4%B8%8EFastboot%E9%A9%B1%E5%8A%A8%E8%A7%A3%E5%86%B3%E5%AE%89%E5%8D%93%E5%88%B7%E6%9C%BA%E6%8A%98%E8%85%BE%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>众所周知，Windows on ARM的兼容性其实并不能媲美x86，即使拥有转译。正常的安卓刷机驱动装上去要不就没反应，要不直接报错。</p><p>感谢<a href="https://github.com/HikariCalyx">HikariCalyx</a>提供的<a href="https://github.com/HikariCalyx/OSTRemote/blob/master/tccadb_arm64_drivers/README.md">Triple-color company ADB - Fastboot Driver for Windows 10 on ARM</a>驱动使得Fastboot驱动成为可能。</p><p>虽然是<code>Windows 10</code>的驱动，但是<code>Windows 11</code>也是可以用的，<del>毕竟换皮嘛</del>。</p><h1 id="禁用驱动程序强制签名"><a href="#禁用驱动程序强制签名" class="headerlink" title="禁用驱动程序强制签名"></a>禁用驱动程序强制签名</h1><p>打开系统设置，依次进入<code>恢复-高级重启</code>，点击<code>重新启动</code>。</p><p><img src="/img/10/sctp10_1.png" alt="image" title="高级重启"></p><p>依次点击<code>疑难解答-高级选项-启动设置</code>，再次重启。</p><p><img src="/img/10/sctp10_2.png" alt="image" title="启动设置"></p><p>按下键盘上的<code>7</code>，禁用驱动程序强制签名，此时系统将正常启动。</p><p><img src="/img/10/sctp10_3.png" alt="image" title="高级启动选项"></p><h1 id="安装证书"><a href="#安装证书" class="headerlink" title="安装证书"></a>安装证书</h1><p>在<a href="https://github.com/HikariCalyx/OSTRemote/tree/master">这里</a>克隆一下zip，我们只需要其中的<code>tccadb_arm64_drivers</code>文件夹。</p><p>打开<code>tccadb_arm64_drivers</code>文件夹，打开<code>hctsw.cer</code>,在弹出的对话框中点击<code>安装证书</code>。</p><p><img src="/img/10/sctp10_4.png" alt="image" title="安装证书"></p><p>注意，你需要为<code>本地主机</code>安装证书，而不是当前用户。</p><p><img src="/img/10/sctp10_5.png" alt="image" title="导入选项"></p><p>可能会弹出UAC提示，允许即可，接下来选项都保持默认。</p><p><img src="/img/10/sctp10_6.png" alt="image" title="成功导入"></p><p>看到此对话框就说明证书导入成功了。</p><h1 id="安装驱动"><a href="#安装驱动" class="headerlink" title="安装驱动"></a>安装驱动</h1><p>将安卓设备置于<code>Fastboot</code>模式，连接电脑，此时<code>设备管理器</code>中将看到名为<code>Android</code>的未知设备。</p><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>对于同时存在Fastboot的Bootloader重启选项的情况，请务必<code>重启到Bootloader</code>。<br><img src="/img/10/sctp10_11.jpg" alt="image" title="重启到Bootloader"></p></blockquote><p>右键它，点击更新设备驱动程序，然后选择<code>从本地选取驱动程序</code>。</p><p><img src="/img/10/sctp10_7.png" alt="image" title="选择驱动程序来源"></p><p>上面的路径直接填写下载的<code>tccadb_arm64_drivers</code>文件夹即可。</p><p><img src="/img/10/sctp10_8.png" alt="image" title="驱动程序路径"></p><p>继续后将会弹出警告，这是数字签名导致的，选择<code>仍要安装</code>。</p><p><img src="/img/10/sctp10_9.png" alt="image" title="安装警告"></p><p>大功告成！现在，你可以开机玩机了！</p><p><img src="/img/10/sctp10_10.png" alt="image" title="安装完成"></p>]]></content>
      
      
      <categories>
          
          <category> 安卓玩机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 玩机 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在macOS上部署Hexo到Github时出现&quot;Spawn failed at ChildProcess&quot;报错的解决方案</title>
      <link href="/2023/12/24/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2023/12/24/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h1><p>在 Windows 下完成了hexo的部署后将其迁移到 macOS 下，大部分功能正常，但是运行<code>hexo d</code>时直接报错。（如下所示）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error: failed to execute prompt script (<span class="built_in">exit</span> code 1)</span><br><span class="line">fatal: could not <span class="built_in">read</span> Username <span class="keyword">for</span> <span class="string">&#x27;https://github.com&#x27;</span>: No error</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: bash: /dev/tty: No such device or address</span></span><br><span class="line"><span class="string">error: failed to execute prompt script (exit code 1)</span></span><br><span class="line"><span class="string">fatal: could not read Username for &#x27;</span>https://github.com<span class="string">&#x27;: No error</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (/users/rin/Blogfile\node_modules\hexo-util\lib\spawn.js:37:17)</span></span><br><span class="line"><span class="string">    at emitTwo (events.js:106:13)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:191:7)</span></span><br><span class="line"><span class="string">    at ChildProcess.cp.emit (/users/rin/Blogfile\node_modules\cross-spawn\lib\enoent.js:40:29)</span></span><br><span class="line"><span class="string">    at maybeClose (internal/child_process.js:920:16)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:230:5)</span></span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>将:</p><p>“<a href="https://github.com/[yourgitname]/[yourgitname].github.io.git">https://github.com/[yourgitname]/[yourgitname].github.io.git</a>“</p><p>替换为:</p><p>“<a href="mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#x74;&#x40;&#x67;&#x69;&#116;&#104;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a>:[yourgitname]&#x2F;[yourgitname].github.io.git”</p><h2 id="命令操作"><a href="#命令操作" class="headerlink" title="命令操作"></a>命令操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo config deploy.repository git@github.com:[yourgitname]/[yourgitname].github.io.git</span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>1.打开hexo<code>根目录</code>下的<code>_config.yml</code></p><p>2.修改其结尾为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:[yourgitname]/[yourgitname].github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>3.再次运行<code>hexo d</code>，问题应该已经解决。</p><p><img src="/img/3/sctp3.png" alt="image" title="成功部署"></p>]]></content>
      
      
      <categories>
          
          <category> hexo 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术领域 </tag>
            
            <tag> macOS </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS环境下部署Hexo并应用Butterfly主题+部署到Github</title>
      <link href="/2023/08/08/macOS%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2hexo%E5%B9%B6%E5%BA%94%E7%94%A8Butterfly%E4%B8%BB%E9%A2%98/"/>
      <url>/2023/08/08/macOS%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2hexo%E5%B9%B6%E5%BA%94%E7%94%A8Butterfly%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p> 网上好多教程都是<code>Windows</code>环境下的， 那我就做一篇<code>macOS</code>环境下的吧。</p><p> 不能说很像，但是事实就是很像，<del>又水一篇</del>。</p><p> Butterfly主题的诞生离不开<a href="https://github.com/jerryc127">Jerry</a>，本网站即使用<a href="https://hexo.io/">Hexo</a>框架以及<a href="https://butterfly.js.org/">Butterfly</a>主题构建。</p><h1 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>本文中的部分命令的执行及网站访问可能需要<code>特定的网络环境</code>。如果你在<code>中国大陆</code>地区，可能会出现<code>速度缓慢</code>甚至<code>无法访问</code>的情况，进而出现<code>Error</code>。<br>你可以使用<code>科学上网</code>解决该问题。<br>你需要的是<code>耐心，细心</code>。完善网站是一个<code>漫长</code>的过程。</p></blockquote><h1 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装<a href="https://git-scm.com/">git</a></h2><h3 id="使用Homebrew进行安装"><a href="#使用Homebrew进行安装" class="headerlink" title="使用Homebrew进行安装"></a>使用<a href="https://brew.sh/">Homebrew</a>进行安装</h3><p>如果你未安装过<code>Homebrew</code>，请在<code>终端</code>使用该命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>完成后，直接在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>在其<a href="https://nodejs.org/">官网</a>上下载<code>macOS</code>版本并安装。</p><h2 id="检查安装是否完成"><a href="#检查安装是否完成" class="headerlink" title="检查安装是否完成"></a>检查安装是否完成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p>若能出现版本号即安装成功。</p><h1 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h1><h2 id="安装位置"><a href="#安装位置" class="headerlink" title="安装位置"></a>安装位置</h2><p>选择你喜欢的位置放置新建一个<code>文件夹</code>用于你的所有blog文件。路径最好不要存在<code>中文</code>或其他<del>雷普的符号</del>。</p><p>接下来，在<code>终端</code>中定位到此目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;指定的博客目录&gt;</span><br><span class="line"><span class="comment"># 例如 cd /users/rin/blogfile</span></span><br></pre></td></tr></table></figure><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>你可以直接将文件夹<code>拖放</code>到终端中来定位。</p></blockquote><h2 id="安装Hexo并且初始化"><a href="#安装Hexo并且初始化" class="headerlink" title="安装Hexo并且初始化"></a>安装Hexo并且初始化</h2><p>在<code>终端</code>中直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>此时打开浏览器并访问<code>localhost:4000</code>，如果出现<code>hexo</code>的<code>初始界面</code>即表明<code>hexo</code>已经部署成功。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>若要停止本地服务器，请在终端中按<code>Control+C</code></p></blockquote><h1 id="Butterfly主题配置"><a href="#Butterfly主题配置" class="headerlink" title="Butterfly主题配置"></a>Butterfly主题配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在<code>终端</code>中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆Butterfly仓库</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="comment"># 安装 pug 以及 stylus 的渲染器</span></span><br><span class="line"><span class="built_in">sudo</span> npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>使用<code>Nano</code>或<code>VS Code</code>打开hexo<code>根目录</code>下的<code>_config.yml</code>，修改其中的主题配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h2 id="后续配置"><a href="#后续配置" class="headerlink" title="后续配置"></a>后续配置</h2><p>请参考<a href="https://butterfly.js.org/posts/dc584b87/">Butterfly官方文档</a></p><h1 id="部署博客至Github"><a href="#部署博客至Github" class="headerlink" title="部署博客至Github"></a>部署博客至Github</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>新建一个仓库，注意名字必须是<code>[username].github.io</code></p><h2 id="配置SSH-keys"><a href="#配置SSH-keys" class="headerlink" title="配置SSH keys"></a>配置SSH keys</h2><p>在<code>终端</code>中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><p>前往<code>/users/username/.ssh</code>，打开<code>id_rsa.pub</code>,复制其中<code>全部内容</code>。</p><p>登录github，在<code>Settings</code>中找到<code>SSH keys</code>并添加刚才复制的key。</p><p>在<code>终端</code>中执行检查绑定情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现<code>Successfully</code>即绑定成功。</p><h2 id="上传blog"><a href="#上传blog" class="headerlink" title="上传blog"></a>上传blog</h2><p>在<code>终端</code>中执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>中间会出现一个登录界面，可以用令牌登录。</p><blockquote><p><i class="fa-solid fa-pen fa-lg"></i> <font size="4">2023-12-24 更新</font><br>若出现<code>Spawn failed at ChildProcess</code>错误，可以参考<a href="https://r1i1na.github.io/2024/11/05/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">此解决方案</a></p></blockquote><p>等待部署，过程大约30-60s。</p><p>这时打开<code>[username].github.io</code>，即可访问你的博客。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><h2 id="所有文章均使用Markdown编写"><a href="#所有文章均使用Markdown编写" class="headerlink" title="所有文章均使用Markdown编写"></a>所有文章均使用<a href="https://markdown.com.cn/">Markdown</a>编写</h2><p>因此，学习它是很重要的。</p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置<code>_config.yml</code></h2><p>用来个性化你的博客。</p><h2 id="访问Hexo官方文档，Butterfly官方文档以及Github进行学习"><a href="#访问Hexo官方文档，Butterfly官方文档以及Github进行学习" class="headerlink" title="访问Hexo官方文档，Butterfly官方文档以及Github进行学习"></a>访问Hexo官方文档，Butterfly官方文档以及Github进行学习</h2><p>从入门到 <del>入土</del> 完善。</p><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><p><a href="https://butterfly.js.org/posts/dc584b87/">Butterfly官方文档</a></p><h1 id="其他：Terminal-Command-Cheat-Sheet"><a href="#其他：Terminal-Command-Cheat-Sheet" class="headerlink" title="其他：Terminal Command Cheat Sheet"></a>其他：Terminal Command Cheat Sheet</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br><span class="line">brew install git</span><br><span class="line">brew install node@22</span><br><span class="line"><span class="comment"># 检查安装是否完成</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br><span class="line"><span class="comment"># 定位目录</span></span><br><span class="line"><span class="built_in">cd</span> &lt;指定的博客目录&gt;</span><br><span class="line"><span class="comment"># 安装Hexo并且初始化</span></span><br><span class="line"><span class="built_in">sudo</span> npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 克隆Butterfly仓库</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="comment"># 安装 pug 以及 stylus 的渲染器</span></span><br><span class="line"><span class="built_in">sudo</span> npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"><span class="comment"># 配置ssh keys</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 上传blog</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 技术领域 </tag>
            
            <tag> macOS </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/27/hello-world/"/>
      <url>/2022/07/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo default post </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
