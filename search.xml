<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在macOS上为游戏启用MetalHUD</title>
      <link href="/2024/11/07/%E5%9C%A8macOS%E4%B8%8A%E4%B8%BA%E6%B8%B8%E6%88%8F%E5%90%AF%E7%94%A8MetalHUD/"/>
      <url>/2024/11/07/%E5%9C%A8macOS%E4%B8%8A%E4%B8%BA%E6%B8%B8%E6%88%8F%E5%90%AF%E7%94%A8MetalHUD/</url>
      
        <content type="html"><![CDATA[<h1 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h1><p>作为<del>帧率敏感型玩家</del><code>极客</code>，肯定希望在<code>游戏</code>时看到电脑的<code>实时状况</code>。</p><p>因此在 Windows 下，我们有<code>MSI Afterburner</code>这个解决方案，可以在游戏中看到实时帧率和占用情况。</p><p>macOS就不友好了：没有<code>第三方软件</code>可以做到这一点。</p><p>但是！macOS自带了可供<code>开发者</code>调试游戏的<a href="https://developer.apple.com/documentation/xcode/monitoring-your-metal-apps-graphics-performance/">MetalHUD</a>，即使是供开发者使用，我们也可以手动启用它。</p><h1 id="通解"><a href="#通解" class="headerlink" title="通解"></a>通解</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br><code>Crossover</code> 玩家请跳过此部分。<br>MetalHUD 并不适用于<code>OpenGL</code>。</p></blockquote><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p><code>关闭</code>目前你正在运行的<code>所有</code>游戏进程。</p><p>打开<code>终端</code>，直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/launchctl setenv MTL_HUD_ENABLED 1</span><br></pre></td></tr></table></figure><p>启动游戏，可以发现 MetalHUD 已经成功显示。</p><p><img src="/img/sctp5.png" alt="image" title="MetalHUD"></p><h2 id="禁用"><a href="#禁用" class="headerlink" title="禁用"></a>禁用</h2><p>打开<code>终端</code>，直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/launchctl setenv MTL_HUD_ENABLED 0</span><br></pre></td></tr></table></figure><p>下次运行游戏时将不再显示<code>MetalHUD</code>。</p><h1 id="CrossOver玩家"><a href="#CrossOver玩家" class="headerlink" title="CrossOver玩家"></a>CrossOver玩家</h1><h2 id="启用-1"><a href="#启用-1" class="headerlink" title="启用"></a>启用</h2><p>打开CrossOver主界面</p><p>在你要启用的游戏上<code>右键</code>并选择<code>Run with Options</code></p><p>在弹出窗口中<code>Environment variables</code>后面填入<code>MTL_HUD_ENABLED=1</code></p><p><img src="/img/sctp5_1.png" alt="image" title="启用MetalHUD"></p><p>启动游戏，可以发现 MetalHUD 已经成功显示。</p><h2 id="禁用-1"><a href="#禁用-1" class="headerlink" title="禁用"></a>禁用</h2><p>将<code>MTL_HUD_ENABLED=1</code>删除即可。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>若<code>重启</code>Mac，则需要重新操作一遍。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> macOS 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> macOS </tag>
            
            <tag> 游戏 </tag>
            
            <tag> CrossOver </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在macOS上部署Hexo到Github时出现&quot;Spawn failed at ChildProcess&quot;报错的解决方案</title>
      <link href="/2024/11/05/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2024/11/05/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="问题复现"><a href="#问题复现" class="headerlink" title="问题复现"></a>问题复现</h1><p>在 Windows 下完成了hexo的部署后将其迁移到 macOS 下，大部分功能正常，但是运行<code>hexo d</code>时直接报错。（如下所示）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">error: failed to execute prompt script (<span class="built_in">exit</span> code 1)</span><br><span class="line">fatal: could not <span class="built_in">read</span> Username <span class="keyword">for</span> <span class="string">&#x27;https://github.com&#x27;</span>: No error</span><br><span class="line">FATAL Something<span class="string">&#x27;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></span><br><span class="line"><span class="string">Error: bash: /dev/tty: No such device or address</span></span><br><span class="line"><span class="string">error: failed to execute prompt script (exit code 1)</span></span><br><span class="line"><span class="string">fatal: could not read Username for &#x27;</span>https://github.com<span class="string">&#x27;: No error</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    at ChildProcess.&lt;anonymous&gt; (/users/rin/Blogfile\node_modules\hexo-util\lib\spawn.js:37:17)</span></span><br><span class="line"><span class="string">    at emitTwo (events.js:106:13)</span></span><br><span class="line"><span class="string">    at ChildProcess.emit (events.js:191:7)</span></span><br><span class="line"><span class="string">    at ChildProcess.cp.emit (/users/rin/Blogfile\node_modules\cross-spawn\lib\enoent.js:40:29)</span></span><br><span class="line"><span class="string">    at maybeClose (internal/child_process.js:920:16)</span></span><br><span class="line"><span class="string">    at Process.ChildProcess._handle.onexit (internal/child_process.js:230:5)</span></span><br></pre></td></tr></table></figure><h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>将:</p><p>“<a href="https://github.com/[yourgitname]/[yourgitname].github.io.git">https://github.com/[yourgitname]/[yourgitname].github.io.git</a>“</p><p>替换为:</p><p>“<a href="mailto:&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#x69;&#x74;&#64;&#x67;&#105;&#116;&#104;&#117;&#x62;&#46;&#99;&#x6f;&#x6d;</a>:[yourgitname]&#x2F;[yourgitname].github.io.git”</p><h2 id="命令操作"><a href="#命令操作" class="headerlink" title="命令操作"></a>命令操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo config deploy.repository git@github.com:[yourgitname]/[yourgitname].github.io.git</span><br></pre></td></tr></table></figure><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>1.打开hexo<code>根目录</code>下的<code>_config.yml</code></p><p>2.修改其结尾为</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:[yourgitname]/[yourgitname].github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure><p>3.再次运行<code>hexo d</code>，问题应该已经解决。</p><p><img src="/img/sctp3.png" alt="image" title="成功部署"></p>]]></content>
      
      
      <categories>
          
          <category> hexo 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 技术领域 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>macOS环境下部署Hexo并应用Butterfly主题+部署到Github</title>
      <link href="/2023/08/08/macOS%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2hexo%E5%B9%B6%E5%BA%94%E7%94%A8Butterfly%E4%B8%BB%E9%A2%98/"/>
      <url>/2023/08/08/macOS%E7%8E%AF%E5%A2%83%E4%B8%8B%E9%83%A8%E7%BD%B2hexo%E5%B9%B6%E5%BA%94%E7%94%A8Butterfly%E4%B8%BB%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p> 网上好多教程都是<code>Windows</code>环境下的， 那我就做一篇<code>macOS</code>环境下的吧。</p><p> 不能说很像，但是事实就是很像，<del>又水一篇</del>。</p><p> Butterfly主题的诞生离不开<a href="https://github.com/jerryc127">Jerry</a>，本网站即使用<a href="https://hexo.io/">Hexo</a>框架以及<a href="https://butterfly.js.org/">Butterfly</a>主题构建。</p><h1 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h1><blockquote><p><i class="fa-solid fa-triangle-exclamation fa-lg"></i> <font size="4">注意</font><br>本文中的部分命令的执行及网站访问可能需要<code>特定的网络环境</code>。如果你在<code>中国大陆</code>地区，可能会出现<code>速度缓慢</code>甚至<code>无法访问</code>的情况，进而出现<code>Error</code>。<br>你可以使用<code>科学上网</code>解决该问题。<br>你需要的是<code>耐心，细心</code>。完善网站是一个<code>漫长</code>的过程。</p></blockquote><h1 id="环境部署"><a href="#环境部署" class="headerlink" title="环境部署"></a>环境部署</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装<a href="https://git-scm.com/">git</a></h2><h3 id="使用Homebrew进行安装"><a href="#使用Homebrew进行安装" class="headerlink" title="使用Homebrew进行安装"></a>使用<a href="https://brew.sh/">Homebrew</a>进行安装</h3><p>如果你未安装过<code>Homebrew</code>，请在<code>终端</code>使用该命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure><p>完成后，直接在终端中输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install git</span><br></pre></td></tr></table></figure><h2 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h2><p>在其<a href="https://nodejs.org/">官网</a>上下载<code>macOS</code>版本并安装。</p><h2 id="检查安装是否完成"><a href="#检查安装是否完成" class="headerlink" title="检查安装是否完成"></a>检查安装是否完成</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br></pre></td></tr></table></figure><p>若能出现版本号即安装成功。</p><h1 id="Hexo部署"><a href="#Hexo部署" class="headerlink" title="Hexo部署"></a>Hexo部署</h1><h2 id="安装位置"><a href="#安装位置" class="headerlink" title="安装位置"></a>安装位置</h2><p>选择你喜欢的位置放置新建一个<code>文件夹</code>用于你的所有blog文件。路径最好不要存在<code>中文</code>或其他<del>雷普的符号</del>。</p><p>接下来，在<code>终端</code>中定位到此目录：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> &lt;指定的博客目录&gt;</span><br><span class="line"><span class="comment"># 例如 cd /users/rin/blogfile</span></span><br></pre></td></tr></table></figure><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>你可以直接将文件夹<code>拖放</code>到终端中来定位。</p></blockquote><h2 id="安装Hexo并且初始化"><a href="#安装Hexo并且初始化" class="headerlink" title="安装Hexo并且初始化"></a>安装Hexo并且初始化</h2><p>在<code>终端</code>中直接输入：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>此时打开浏览器并访问<code>localhost:4000</code>，如果出现<code>hexo</code>的<code>初始界面</code>即表明<code>hexo</code>已经部署成功。</p><blockquote><p><i class="fa-solid fa-circle-info fa-lg"></i> <font size="4">提示</font><br>若要停止本地服务器，请在终端中按<code>Control+C</code></p></blockquote><h1 id="Butterfly主题配置"><a href="#Butterfly主题配置" class="headerlink" title="Butterfly主题配置"></a>Butterfly主题配置</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在<code>终端</code>中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 克隆Butterfly仓库</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="comment"># 安装 pug 以及 stylus 的渲染器</span></span><br><span class="line"><span class="built_in">sudo</span> npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><p>使用<code>Nano</code>或<code>VS Code</code>打开hexo<code>根目录</code>下的<code>_config.yml</code>，修改其中的主题配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">butterfly</span></span><br></pre></td></tr></table></figure><h2 id="后续配置"><a href="#后续配置" class="headerlink" title="后续配置"></a>后续配置</h2><p>请参考<a href="https://butterfly.js.org/posts/dc584b87/">Butterfly官方文档</a></p><h1 id="部署博客至Github"><a href="#部署博客至Github" class="headerlink" title="部署博客至Github"></a>部署博客至Github</h1><h2 id="新建仓库"><a href="#新建仓库" class="headerlink" title="新建仓库"></a>新建仓库</h2><p>新建一个仓库，注意名字必须是<code>[username].github.io</code></p><h2 id="配置SSH-keys"><a href="#配置SSH-keys" class="headerlink" title="配置SSH keys"></a>配置SSH keys</h2><p>在<code>终端</code>中执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><p>前往<code>/users/username/.ssh</code>，打开<code>id_rsa.pub</code>,复制其中<code>全部内容</code>。</p><p>登录github，在<code>Settings</code>中找到<code>SSH keys</code>并添加刚才复制的key。</p><p>在<code>终端</code>中执行检查绑定情况：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>出现<code>Successfully</code>即绑定成功。</p><h2 id="上传blog"><a href="#上传blog" class="headerlink" title="上传blog"></a>上传blog</h2><p>在<code>终端</code>中执行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><p>中间会出现一个登录界面，可以用令牌登录。</p><blockquote><p><i class="fa-solid fa-pen fa-lg"></i> <font size="4">2024-11-07 更新</font><br>若出现<code>Spawn failed at ChildProcess</code>错误，可以参考<a href="https://r1i1na.github.io/2024/11/05/%E5%85%B3%E4%BA%8E%E5%9C%A8macOS%E4%B8%8A%E9%83%A8%E7%BD%B2hexo%E5%88%B0github%E6%97%B6%E5%87%BA%E7%8E%B0Spawn-failed-at-ChildProcess%E6%8A%A5%E9%94%99%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/">此解决方案</a></p></blockquote><p>等待部署，过程大约30-60s。</p><p>这时打开<code>[username].github.io</code>，即可访问你的博客。</p><h1 id="后续"><a href="#后续" class="headerlink" title="后续"></a>后续</h1><h2 id="所有文章均使用Markdown编写"><a href="#所有文章均使用Markdown编写" class="headerlink" title="所有文章均使用Markdown编写"></a>所有文章均使用<a href="https://markdown.com.cn/">Markdown</a>编写</h2><p>因此，学习它是很重要的。</p><h2 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置_config.yml"></a>配置<code>_config.yml</code></h2><p>用来个性化你的博客。</p><h2 id="访问Hexo官方文档，Butterfly官方文档以及Github进行学习"><a href="#访问Hexo官方文档，Butterfly官方文档以及Github进行学习" class="headerlink" title="访问Hexo官方文档，Butterfly官方文档以及Github进行学习"></a>访问Hexo官方文档，Butterfly官方文档以及Github进行学习</h2><p>从入门到 <del>入土</del> 完善。</p><h1 id="附"><a href="#附" class="headerlink" title="附"></a>附</h1><p><a href="https://hexo.io/zh-cn/docs/">Hexo官方文档</a></p><p><a href="https://butterfly.js.org/posts/dc584b87/">Butterfly官方文档</a></p><h1 id="其他：Terminal-Command-Cheat-Sheet"><a href="#其他：Terminal-Command-Cheat-Sheet" class="headerlink" title="其他：Terminal Command Cheat Sheet"></a>其他：Terminal Command Cheat Sheet</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br><span class="line">brew install git</span><br><span class="line">brew install node@22</span><br><span class="line"><span class="comment"># 检查安装是否完成</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -v</span><br><span class="line"><span class="comment"># 定位目录</span></span><br><span class="line"><span class="built_in">cd</span> &lt;指定的博客目录&gt;</span><br><span class="line"><span class="comment"># 安装Hexo并且初始化</span></span><br><span class="line"><span class="built_in">sudo</span> npm install -g hexo-cli</span><br><span class="line">hexo init</span><br><span class="line">hexo install</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br><span class="line"><span class="comment"># 克隆Butterfly仓库</span></span><br><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="comment"># 安装 pug 以及 stylus 的渲染器</span></span><br><span class="line"><span class="built_in">sudo</span> npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line"><span class="comment"># 配置ssh keys</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br><span class="line">ssh -T git@github.com</span><br><span class="line"><span class="comment"># 上传blog</span></span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> hexo 部署 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 技术领域 </tag>
            
            <tag> macOS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/07/27/hello-world/"/>
      <url>/2022/07/27/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> hexo default post </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
